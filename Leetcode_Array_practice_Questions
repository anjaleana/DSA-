Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3
Output: [1,2,2,3,5,6]
Explanation: The arrays we are merging are [1,2,3] and [2,5,6].
The result of the merge is [1,2,2,3,5,6] with the underlined elements coming from nums1.

code:

class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        """
        Do not return anything, modify nums1 in-place instead.
        """
        nums1[m:] = nums2
        nums1 = nums1.sort()
        return nums1


# Kadane's algorithm which is used to find maximum subarray sum 

def max_subarray(arr):
    if not arr:
        return 0
    
    current_sum = max_sum = arr[0]
    
    for i in range(1,len(arr)):
        current_sum = max(arr[i],current_sum+arr[i])
        max_sum = max(max_sum,current_sum)
        
    return max_sum

#Example usage

nums = [1,-2,3,4,-1,2,1,-5,4]
max_sum = max_subarray(nums)
print(max_sum)
